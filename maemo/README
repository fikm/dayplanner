Day Planner Maemo port scratchbook.
Random thoughts, plans and notes on the Day Planner port to the maemo platform
$Id$

-----
NOTE: THIS IS NOT READY FOR USE. RUN ANY FILES HERE ON YOUR OWN RISK.
-----

Note also that this is not definite. Each and every single part of this
file is subject to change at any time.

This is the beginning of the Maemo port of Day Planner.
Due to the lack of a Perl gtk2 port to the platform this will be done in
the form of a stupid python client interface that simply spews commands to
a specially created daemon which actually handles all the real work.
The python client will be a tiny interface part. It handles creation of
widgets, and communication with X. It doesn't store any actual data nor
parse anything. It should just open up a communication socket with the
worker daemon, display the interface. That's it.

The aim is that this should run on OS2008.

The daemon should do everything back-end related:
- Load configuration files
- Parse and provide .holiday data
- Parse and provide iCalendar data
- Perform Day Planner Services synchronization

Items of interest:
- Integration with Maemo clock.


Required python work:
- Dumb front-end
- Dirty conversion functions:
	- Hash transportformat -> internal associative array format
	- Array transportformat -> internal array format
	- Internal associative array format -> hash transportformat
	- Internal array format -> hash transportformat

Required perl work:
- Modularization of more of the code in dayplanner, put it into modules for
  it all to share. Add DP::InternalCore.
- Dirty conversion functions:
	- Hash -> hash transportformat
	- Array -> array transportformat
	- Hash transportformat -> hash
	- Array transportformat -> array
- Client handler, rip from dayplanner-daemon
- LOWMEM mode?
	- Destroy objects after each use, slow, but would conserve memory
